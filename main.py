# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PyQT.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import math

from PyQt5 import QtCore, QtGui, QtWidgets
import pyqtgraph as pg
import pyqtgraph.exporters
import numpy as np

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.widget = PlotWidget(self.centralwidget)
        self.widget.setObjectName("widget")
        self.gridLayout.addWidget(self.widget, 0, 0, 1, 1)
        self.horizontalLayout.addLayout(self.gridLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 31))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.Sin = QtWidgets.QAction(MainWindow)
        self.Sin.setObjectName("Sin")
        self.Exp = QtWidgets.QAction(MainWindow)
        self.Exp.setObjectName("Exp")
        self.Tcos = QtWidgets.QAction(MainWindow)
        self.Tcos.setObjectName("Tcos")
        self.action5_cos_3O_4 = QtWidgets.QAction(MainWindow)
        self.action5_cos_3O_4.setObjectName("action5_cos_3O_4")
        self.menu.addAction(self.Sin)
        self.menu.addAction(self.Exp)
        self.menu.addAction(self.Tcos)
        self.menu.addAction(self.action5_cos_3O_4)
        self.menubar.addAction(self.menu.menuAction())


        self.Sin.triggered.connect(self.showSinFunc)
        self.Exp.triggered.connect(self.showExpFunc)
        self.Tcos.triggered.connect(self.showTCosFunc)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menu.setTitle(_translate("MainWindow", "Выберите график для построения"))
        self.Sin.setText(_translate("MainWindow", "sin(x^2)"))
        self.Exp.setText(_translate("MainWindow", "x*e^-0.1x"))
        self.Tcos.setText(_translate("MainWindow", "t*cos(t)"))
        self.action5_cos_3O_4.setText(_translate("MainWindow", "5*cos(3O+4)"))

    def showSinFunc(self):
        x = [-math.pi,(-5 * math.pi)/6, (-2 * math.pi)/3 , -math.pi / 2 , -math.pi / 3, -math.pi/6 ,  math.pi/6 , math.pi/3 , math.pi/2 , (math.pi * 2)/3, (5 * math.pi)/6, math.pi]
        i = 0
        y = []
        for i in range(len(x)):
            y.append(math.sin(x[i]**2))

        plt = pg.plot(x, y, title="SinFunc", pen='r')
        plt.showGrid(x=True, y=True)
    def showExpFunc(self):
        x = list(range(0, 100))
        y = []
        for i in range(len(x)):
            y.append(x[i]*math.exp(-0.1*x[i]))
        plt = pg.plot(x, y, title="ExpFunc", pen='r')
        plt.showGrid(x=True, y=True)

    def showTCosFunc(self):
        t = [math.pi/6 , math.pi/3 , math.pi/2 , (math.pi * 2)/3, (5 * math.pi)/6, math.pi, (7 * math.pi)/6, (4 * math.pi)/3 ,(3*math.pi)/6, (5* math.pi)/3 , (11*math.pi)/6, 2*math.pi]
        x = []
        y = []
        for i in range(len(t)):
            x.append(t[i] * math.sin(t[i]))
            y.append(t[i] * math.cos(t[i]))
        plt = pg.plot(x, y, title="TcosFunc", pen='r')
        plt.showGrid(x=True, y=True)

from pyqtgraph import PlotWidget


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
